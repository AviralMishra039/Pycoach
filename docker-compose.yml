services:
  # ----------------------------------------------------
  # 1. FastAPI Backend Service (Builds the Base Application Image)
  # ----------------------------------------------------
  backend:
    # Build the image using the Dockerfile in the current directory
    build: .
    # Map the container port 8000 to the host port 8000
    ports:
      - "8000:8000"
    # Environment variables (loads GEMINI_API_KEY from host machine's .env file)
    env_file:
      - .env
    # NOTE: Ollama dependency removed.
    
    # Mount the ChromaDB folder so the indexed data persists
    volumes:
      - chroma_data:/app/chroma_db
      - .:/app # Mount all code for development/reindexing ease
    # The command defaults to the FastAPI startup command in the Dockerfile
  
  # ----------------------------------------------------
  # 2. Streamlit Frontend Service
  # ----------------------------------------------------
  frontend:
    
    build: . 
    # Map container port 8501 to host port 8501
    ports:
      - "8501:8501"
    # Ensure frontend only starts once backend is up
    depends_on:
      - backend
    # This command overrides the FastAPI command in the image to run Streamlit
    command: streamlit run frontend/app.py
    # Streamlit needs access to the backend API via its Docker service name
    environment:
      # CRITICAL: The API_BASE_URL must now point to the backend service name.
      # This was also corrected in your frontend/app.py.
      - API_BASE_URL=http://backend:8000/api/chat


# Define persistent volumes
volumes:
  # NOTE: ollama_models volume removed
  chroma_data:
