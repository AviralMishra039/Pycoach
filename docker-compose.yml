services:
  # ----------------------------------------------------
  # 1. FastAPI Backend Service (Builds the Base Application Image)
  # ----------------------------------------------------
  backend:
    # Build the image using the Dockerfile in the current directory
    build: .
    # Map the container port 8000 to the host port 8000
    ports:
      - "8000:8000"
    # Environment variables (loads GEMINI_API_KEY from host machine's .env file)
    env_file:
      - .env
      
    # Healthcheck ensures the backend server is fully responsive before the frontend starts
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"] 
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s # Give time for Python/FastAPI to start

    # Mount the ChromaDB folder so the indexed data persists
    volumes:
      - chroma_data:/app/chroma_db
      - .:/app # Mount all code for development/reindexing ease
    # The command defaults to the FastAPI startup command in the Dockerfile
  
  # ----------------------------------------------------
  # 2. Streamlit Frontend Service
  # ----------------------------------------------------
  frontend:
    
    build: . 
    # Map container port 8501 to host port 8501
    ports:
      - "8501:8501"
      
    # CRITICAL: Ensure frontend waits for the backend to be declared 'healthy'
    depends_on:
      backend:
        condition: service_healthy
        
    # This command overrides the FastAPI command in the image to run Streamlit
    command: streamlit run frontend/app.py
    # Streamlit needs access to the local API
    environment:
      # This is crucial: the Streamlit app needs to access FastAPI via its service name
      - API_BASE_URL=http://backend:8000/api/chat


# Define persistent volumes
volumes:
  chroma_data: